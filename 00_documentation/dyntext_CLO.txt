<<dd_version: 1>>
Documentation of CLO dataset
=====================================================================

<<dd_do:quietly>>

* This is the documentation generator companion from edukit_save.
* It's a do file section that create locals to display dynamically
* Author: Diana Goldemberg

* Dataset observations and variables
describe
local nobs  = r(N)
local nvars = r(k)

/*  Metadata automatically generated by edukit_save is stored in metadata_chars
    the idea is to read through them all and index them, so they are all displayed
    with their correct names and values. */

    local i = 1
    local metadata_chars:   char _dta[metadata_chars]
    while "`metadata_chars'" != "" {
      gettoken thischar metadata_chars : metadata_chars, parse(" ")
      local char_i`i' = 	    "`thischar'"
      local char_value_i`i':  char _dta[`thischar']
      local ++i
    }

/*  The loop above was generic, so it could be reused in other dyndocs,
    but for all CLO files, we know the exact order or metadata.
    As in any file saved by edukit_save, metadata_chars starts with:
      i1.  lastsave
      i2.  varclasses_used
    Moreover, in CLO do files, the header is concatenated into:
      i3.  region
      i4.  year
      i5.  assessment
      i6.  master
      i7.  adaptation
      i8.  module
      i9.  ttl_info
      i10. dofile_info
      i11. description
*/

/*  We also want to read varclasses_used to read each of the chars it defines.
    By reading each of those chars, we find which variables are in those classes. */

    local j = 1
    local varclasses_used:	char _dta[varclasses_used]
    while "`varclasses_used'" != "" {
      gettoken thischar varclasses_used : varclasses_used, parse(" ")
      local char_j`j' = 	    "`thischar'"
      local char_value_j`j':  char _dta[`thischar']
      local ++j
    }

/*  As in any file saved by edukit_save, varclasses_used starts with:
      j1.  idvars
    Moreover, in CLO do files, it's always:
      j2.  valuevars
      j3.  traitvars
    Some do files (or future edits) may entail having more varclasses_used. */

/*  NOTE: we purposefully use individual spaces instead of tabs in the
    dd_display section below, to get consistency in spacing across platforms. */

<</dd_do>>

[back to list of assessments](https://github.com/worldbank/GLAD/blob/master/README.md#indicators)

<<dd_display:"`char_value_i11'">>

**Metadata** stored in this dataset:

~~~~
<<dd_display:"`char_i3'">>:      <<dd_display:"`char_value_i3'">>
<<dd_display:"`char_i4'">>:        <<dd_display:"`char_value_i4'">>
<<dd_display:"`char_i5'">>:  <<dd_display:"`char_value_i5'">>
<<dd_display:"`char_i6'">>:      <<dd_display:"`char_value_i6'">>
<<dd_display:"`char_i7'">>:  <<dd_display:"`char_value_i7'">>
<<dd_display:"`char_i8'">>:      <<dd_display:"`char_value_i8'">>
<<dd_display:"`char_i9'">>:    <<dd_display:"`char_value_i9'">>
<<dd_display:"`char_i10'">>: <<dd_display:"`char_value_i10'">>
<<dd_display:"`char_i1'">>:    <<dd_display:"`char_value_i1'">>
~~~~


About the **<<dd_display:`nvars'>> variables** in this dataset:

~~~~
The variables belong to the following variable classifications:
<<dd_display:"`char_value_i2'">>

<<dd_display:"`char_j1'">>:    <<dd_display:"`char_value_j1'">>
<<dd_display:"`char_j2'">>: <<dd_display:"`char_value_j2'">>
<<dd_display:"`char_j3'">>: <<dd_display:"`char_value_j3'">>

<<dd_do>>
codebook, compact
<</dd_do>>
~~~~

About the **<<dd_display: %-7.0fc `nobs'>> observations** in this dataset:

~~~~
<<dd_do>>
tab countrycode idgrade

tab subgroup
<</dd_do>>
~~~~
